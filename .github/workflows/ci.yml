name: CI - Build, Push, and Update Manifests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_HUB_USER: thallavi

jobs:
  build-and-push:
    name: Build & Push Changed Microservices
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    outputs:
      ecommerce-ui: ${{ steps.changes.outputs.ecommerce-ui }}
      product-catalog: ${{ steps.changes.outputs.product-catalog }}
      product-inventory: ${{ steps.changes.outputs.product-inventory }}
      order-management: ${{ steps.changes.outputs.order-management }}
      shipping-and-handling: ${{ steps.changes.outputs.shipping-and-handling }}
      profile-management: ${{ steps.changes.outputs.profile-management }}
      contact-support-team: ${{ steps.changes.outputs.contact-support-team }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Detect changed services
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ecommerce-ui:
              - 'ecommerce-ui/**'
            product-catalog:
              - 'product-catalog/**'
            product-inventory:
              - 'product-inventory/**'
            order-management:
              - 'order-management/**'
            shipping-and-handling:
              - 'shipping-and-handling/**'
            profile-management:
              - 'profile-management/**'
            contact-support-team:
              - 'contact-support-team/**'

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build and push ecommerce-ui
        if: steps.changes.outputs.ecommerce-ui == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./ecommerce-ui
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/ecommerce-ui:${{ env.IMAGE_TAG }}

      - name: Build and push product-catalog
        if: steps.changes.outputs.product-catalog == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./product-catalog
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/product-catalog:${{ env.IMAGE_TAG }}

      - name: Build and push product-inventory
        if: steps.changes.outputs.product-inventory == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./product-inventory
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/product-inventory:${{ env.IMAGE_TAG }}

      - name: Build and push order-management
        if: steps.changes.outputs.order-management == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./order-management
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/order-management:${{ env.IMAGE_TAG }}

      - name: Build and push shipping-and-handling
        if: steps.changes.outputs.shipping-and-handling == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./shipping-and-handling
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/shipping-and-handling:${{ env.IMAGE_TAG }}

      - name: Build and push profile-management
        if: steps.changes.outputs.profile-management == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./profile-management
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/profile-management:${{ env.IMAGE_TAG }}

      - name: Build and push contact-support-team
        if: steps.changes.outputs.contact-support-team == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./contact-support-team
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/contact-support-team:${{ env.IMAGE_TAG }}

  update-manifests:
    name: Update Kubernetes Manifests
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Update manifests for changed services
        run: |
          services=("ecommerce-ui" "product-catalog" "product-inventory" "order-management" "shipping-and-handling" "profile-management" "contact-support-team")

          for service in "${services[@]}"; do
            changed="${{ needs.build-and-push.outputs[${service}] }}"
            if [ "$changed" == "true" ]; then
              manifest_file="manifest/${service}.yaml"
              if [ -f "$manifest_file" ]; then
                echo "Updating image tag for changed service: $service"
                sed -i "s|image: ${{ env.DOCKER_HUB_USER }}/$service:.*|image: ${{ env.DOCKER_HUB_USER }}/$service:${GITHUB_SHA}|" "$manifest_file"
              fi
            fi
          done
